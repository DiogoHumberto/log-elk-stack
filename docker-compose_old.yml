version: '3.7'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:7.15.0
    container_name: logstash
    volumes:
      - ./logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - elk

  rabbitmq:
      image: rabbitmq:3-management-alpine
      container_name: rabbitmq
      #restart: always
      ports:
        - 5672:5672
        - 15672:15672
      volumes:
        - ./dados:/var/lib/rabbitmq/
        - ./dados:/var/log/rabbitmq
      environment:
        - RABBITMQ_DEFAULT_USER=admin
        - RABBITMQ_DEFAULT_PASS=admin
      healthcheck:
        test: ["CMD", "rabbitmqctl", "status"]
        interval: 10s
        timeout: 5s
        retries: 3
      networks:
        - elk

  srv-entrega:
      build:
        context: ./srv-entrega
      ports:
        - "9090:9090"
      env_file: ./env/app.env
      #restart: unless-stopped
      depends_on:
        rabbitmq:
          condition: service_healthy
        elasticsearch:
          condition: service_healthy
      networks:
        - elk

networks:
  elk:
    driver: bridge
